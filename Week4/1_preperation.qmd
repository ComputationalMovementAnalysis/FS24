## Preparation {#w2-preparation}

This week, we are going to leverage Git by connecting it to an online repository. Git on it's own can be useful, but to use all of the advantages its best to combine it with an hosted service like Github.

### Install Git{#install-git}


:::{.callout-note}

Much of this chapter was taken from @bryan2021. If you want to dive deeper into using Git, we highly recommend this book. For an *even* deeper dive into Git, read @chacon2014. Both books are available free and open source on [happygitwithr.com](https://happygitwithr.com/) and [git-scm.com/book](https://git-scm.com/book/), respectively.

:::


Git is a software dedicated to tracking changes in text files (e.g. R scripts). It's heavily used in the software industry as well as in the field of data science. In this course, we will teach use the basic functionalities of Git and combine it with the online portal Github.

Therefore, the next step is to install Git. There are different Git installers to choose from, we recommend the following:


::: {.panel-tabset}

## Windows

  - We recommend installing [Git for Windows](https://gitforwindows.org/), also known as `msysgit` or “Git Bash". 
  - When asked about “Adjusting your PATH environment”, select “Git from the command line and also from 3rd-party software”
  - RStudio prefers Git to be installed in `C:\Program Files\Git`, we recommend following this convention
  - Otherwise, we believe it is good to accept the defaults

## macOS

  - We recommend you install the Xcode command line tools (not all of Xcode), which includes Git
  - Go to the shell and enter `xcode-select --install` to install developer command line tools


## Linux

  - On Ubuntu or Debian Linux: `sudo apt-get install git`
  - On Fedora or RedHat Linux: `sudo yum install git`


:::


## Change RStudio Settings

Now, **restart RStudio**. Then, go to *Tools → Global options → Git / SVN*.

- Activate the option "*Enable version control interface for RStudio projects*"
- If the Field "*Git executable*:" shows `(Not Found)`, browse to your git installation from the [previous step](install-git).
- This path should look something like this:
  - Windows: `C:\Program Files\Git\bin\git.exe` (**not** `C:\Program Files\Git\cmd\git.exe` or `some-path\git-bash.exe`)
  - Linux / macOS: `/usr/bin/git`



### Create a Github account{#sec-create-github}

Create a Github account on [github.com](https://github.com/) (it's free of course). We recommend you use your students email address. When choosing a username on Github, consider the following advice: 

- incorporating your actual name is nice, people like to know who they are dealing with
- choose a name that you are comfortable revealing it to a future boss
- shorter is better than longer
- make it timeless (e.g. don't incorporate your university's name)



:::{#nte-github1 .callout-note}
## Users who already have a Github account

If you already have a Github account (e.g. for work) and don't mind using this account for the tasks in this course, you are free to use this existing account. However, if you don't want to mix these activities, we recommend you *create a new Github account with your student mail address*. 


:::