{
  "hash": "a2c83cb4cf73fe84fa08aca7877970c6",
  "result": {
    "markdown": "## Solutions\n\n:::{.callout-tip}\nHover over the code and copy the content by clicking on the clipboard icon on the top right. You can now paste this into an R-Script.\n:::\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```{.sourceCode .r}\n# task_1.R\n################################################################################\n\n\nlibrary(\"readr\") \nlibrary(\"sf\") \n\nwildschwein_BE <- read_delim(\"datasets/wildschwein_BE_2056.csv\", \",\")\n\nwildschwein_BE <- st_as_sf(wildschwein_BE, coords = c(\"E\", \"N\"), crs = 2056, remove = FALSE)\n\n\n\n\n# task_2.R\n################################################################################\n\n\nlibrary(\"dplyr\") \n\nlibrary(\"lubridate\") \nlibrary(\"ggplot2\") \n\nwildschwein_BE <- wildschwein_BE |>\n  mutate(timelag = as.numeric(difftime(lead(DatetimeUTC), DatetimeUTC, units = \"secs\")))\n\nggplot(wildschwein_BE, aes(DatetimeUTC, TierID)) +\n  geom_line()\n\nggplot(wildschwein_BE, aes(timelag)) +\n  geom_histogram(binwidth = 50) +\n  lims(x = c(0, 15000)) +\n  scale_y_log10()\n\n\nwildschwein_BE |>\n  filter(year(DatetimeUTC) == 2014) |>\n  ggplot(aes(DatetimeUTC, timelag, colour = TierID)) +\n  geom_line() +\n  geom_point()\n\n\n\n\n# task_3.R\n################################################################################\n\n\nwildschwein_BE <- wildschwein_BE |>\n  group_by(TierID) |>\n  mutate(\n    steplength = sqrt((E-lead(E))^2+(N-lead(N))^2)\n  )\n\nwildschwein_BE <- wildschwein_BE |>\n  group_by(TierID) |>\n  mutate(\n    speed = steplength/timelag\n  )\n\n\n\n\n# task_4.R\n################################################################################\n\n\ncaro <- read_delim(\"datasets/caro60.csv\", \",\")\n\ncaro[seq(1, nrow(caro), 3), ]\n\ncaro_3 <- caro[seq(1, nrow(caro), 3), ]\n\ncaro_6 <- caro[seq(1, nrow(caro), 6), ]\n\ncaro_9 <- caro[seq(1, nrow(caro), 9), ]\n\ncaro <- caro |>\n  mutate(\n    timelag = as.numeric(difftime(lead(DatetimeUTC), DatetimeUTC, units = \"secs\")),\n    steplength = sqrt((E - lead(E))^2 + (N - lead(N))^2),\n    speed = steplength / timelag\n  )\n\ncaro_3 <- caro_3 |>\n  mutate(\n    timelag = as.numeric(difftime(lead(DatetimeUTC), DatetimeUTC, units = \"secs\")),\n    steplength = sqrt((E - lead(E))^2 + (N - lead(N))^2),\n    speed = steplength / timelag\n  )\n\ncaro_6 <- caro_6 |>\n  mutate(\n    timelag = as.numeric(difftime(lead(DatetimeUTC), DatetimeUTC, units = \"secs\")),\n    steplength = sqrt((E - lead(E))^2 + (N - lead(N))^2),\n    speed = steplength / timelag\n  )\n\ncaro_9 <- caro_9 |>\n  mutate(\n    timelag = as.numeric(difftime(lead(DatetimeUTC), DatetimeUTC, units = \"secs\")),\n    steplength = sqrt((E - lead(E))^2 + (N - lead(N))^2),\n    speed = steplength / timelag\n  )\n\nggplot() +\n  geom_point(data = caro, aes(E, N, colour = \"1 minute\"), alpha = 0.2) +\n  geom_path(data = caro, aes(E, N, colour = \"1 minute\"), alpha = 0.2) +\n  geom_point(data = caro_3, aes(E, N, colour = \"3 minutes\")) +\n  geom_path(data = caro_3, aes(E, N, colour = \"3 minutes\")) +\n  labs(color = \"Trajectory\", title = \"Comparing original- with 3 minutes-resampled data\") +\n  theme_minimal()\n\nggplot() +\n  geom_point(data = caro, aes(E, N, colour = \"1 minute\"), alpha = 0.2) +\n  geom_path(data = caro, aes(E, N, colour = \"1 minute\"), alpha = 0.2) +\n  geom_point(data = caro_6, aes(E, N, colour = \"6 minutes\")) +\n  geom_path(data = caro_6, aes(E, N, colour = \"6 minutes\")) +\n  labs(color = \"Trajectory\", title = \"Comparing original- with 6 minutes-resampled data\") +\n  theme_minimal()\n\nggplot() +\n  geom_point(data = caro, aes(E, N, colour = \"1 minute\"), alpha = 0.2) +\n  geom_path(data = caro, aes(E, N, colour = \"1 minute\"), alpha = 0.2) +\n  geom_point(data = caro_9, aes(E, N, colour = \"9 minutes\")) +\n  geom_path(data = caro_9, aes(E, N, colour = \"9 minutes\")) +\n  labs(color = \"Trajectory\", title = \"Comparing original- with 9 minutes-resampled data\") +\n  theme_minimal()\n\nggplot() +\n  geom_line(data = caro, aes(DatetimeUTC, speed, colour = \"1 minute\")) +\n  geom_line(data = caro_3, aes(DatetimeUTC, speed, colour = \"3 minutes\")) +\n  geom_line(data = caro_6, aes(DatetimeUTC, speed, colour = \"6 minutes\")) +\n  geom_line(data = caro_9, aes(DatetimeUTC, speed, colour = \"9 minutes\")) +\n  labs(x = \"Time\", y = \"Speed (m/s)\", title = \"Comparing derived speed at different sampling intervals\") +\n  theme_minimal()\n\n\n\n\n# task_5.R\n################################################################################\n\n\n  library(\"zoo\")\n\nexample <- rnorm(10)\nrollmean(example, k = 3, fill = NA, align = \"left\")\nrollmean(example, k = 4, fill = NA, align = \"left\")\n\ncaro <- caro |>\n  mutate(\n    speed3 = rollmean(speed, 3, NA, align = \"left\"),\n    speed6 = rollmean(speed, 6, NA, align = \"left\"),\n    speed9 = rollmean(speed, 9, NA, align = \"left\")\n  )\n\ncaro |>\n  ggplot() +\n  geom_line(aes(DatetimeUTC, speed), colour = \"#E41A1C\") +\n  geom_line(aes(DatetimeUTC, speed3), colour = \"#377EB8\") +\n  geom_line(aes(DatetimeUTC, speed6), colour = \"#4DAF4A\") +\n  geom_line(aes(DatetimeUTC, speed9), colour = \"#984EA3\")\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}