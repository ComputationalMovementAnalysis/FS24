{
  "hash": "a444fa74d099868527965590cc4639d9",
  "result": {
    "markdown": "## Solutions\n\n:::{.callout-tip}\nHover over the code and copy the content by clicking on the clipboard icon on the top right. You can now paste this into an R-Script.\n:::\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```{.sourceCode .r}\n# task 1 ########################################################################\n\neuclid <- function(x, y, leadval = 1) {\n  sqrt((x - lead(x, leadval))^2 + (y - lead(y, leadval))^2)\n}\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```{.sourceCode .r}\n# task 2 ########################################################################\n\nwildschwein <- read_delim(\"datasets/wildschwein_BE_2056.csv\", \",\")\n\nwildschwein_filter <- wildschwein %>%\n       filter(\n              DatetimeUTC > \"2015-04-01\",\n              DatetimeUTC < \"2015-04-15\"\n       ) %>%\n       filter(TierName %in% c(\"Rosa\", \"Sabi\"))\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```{.sourceCode .r}\n# task 3 ########################################################################\n\nwildschwein_filter <- wildschwein_filter %>%\n  group_by(TierID) %>%\n  mutate(\n    DatetimeRound = lubridate::round_date(DatetimeUTC, \"15 minutes\")\n  )\n\nhead(wildschwein_filter)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```{.sourceCode .r}\n# task 4 ########################################################################\n\nlibrary(purrr)\n\nsabi <- wildschwein_filter %>%\n  filter(TierName == \"Sabi\")\n\nrosa <- wildschwein_filter %>%\n  filter(TierName == \"Rosa\")\n\nwildschwein_join <- full_join(sabi, rosa, by = c(\"DatetimeRound\"), suffix = c(\"_sabi\", \"_rosa\"))\n\nwildschwein_join <- wildschwein_join %>%\n  mutate(\n    distance = sqrt((E_rosa - E_sabi)^2 + (N_rosa - N_sabi)^2),\n    meet = distance < 100\n  )\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```{.sourceCode .r}\n# task 5 ########################################################################\n\nwildschwein_meet <- wildschwein_join %>%\n  filter(meet)\n\nggplot(wildschwein_meet) +\n  geom_point(data = sabi, aes(E, N, colour = \"sabi\"), shape = 16, alpha = 0.3) +\n  geom_point(data = rosa, aes(E, N, colour = \"rosa\"), shape = 16, alpha = 0.3) +\n  geom_point(aes(x = E_sabi, y = N_sabi, fill = \"sabi\"), shape = 21) +\n  geom_point(aes(E_rosa, N_rosa, fill = \"rosa\"), shape = 21) +\n  labs(color = \"Regular Locations\", fill = \"Meets\") +\n  coord_equal(xlim = c(2570000, 2571000), y = c(1204500, 1205500))\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```{.sourceCode .r}\n# task 6 ########################################################################\n\nmeanmeetpoints <- wildschwein_join %>%\n  filter(meet) %>%\n  mutate(\n    E.mean = (E_rosa + E_sabi) / 2,\n    N.mean = (N_rosa + N_sabi) / 2\n  )\n\nlibrary(plotly)\nplot_ly(wildschwein_join, x = ~E_rosa, y = ~N_rosa, z = ~DatetimeRound, type = \"scatter3d\", mode = \"lines\") %>%\n  add_trace(wildschwein_join, x = ~E_sabi, y = ~N_sabi, z = ~DatetimeRound) %>%\n  add_markers(data = meanmeetpoints, x = ~E.mean, y = ~N.mean, z = ~DatetimeRound) %>%\n  layout(scene = list(\n    xaxis = list(title = \"E\"),\n    yaxis = list(title = \"N\"),\n    zaxis = list(title = \"Time\")\n  ))\n\n\nwildschwein_join %>%\n  filter(DatetimeRound < \"2015-04-04\") %>%\n  plot_ly(x = ~E_rosa, y = ~N_rosa, z = ~DatetimeRound, type = \"scatter3d\", mode = \"lines\") %>%\n  add_trace(wildschwein_join, x = ~E_sabi, y = ~N_sabi, z = ~DatetimeRound) %>%\n  add_markers(data = meanmeetpoints, x = ~E.mean, y = ~N.mean, z = ~DatetimeRound) %>%\n  layout(scene = list(\n    xaxis = list(title = \"E\"),\n    yaxis = list(title = \"N\"),\n    zaxis = list(title = \"Time\")\n  ))\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}